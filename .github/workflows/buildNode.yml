# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    environment: development
    env:
      CI: ""
      TF_VAR_base_domain: ${{ secrets.BASE_DOMAIN }}

    strategy:
      matrix:
        node-version: [14.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - run: ls -la

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./terraform


      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ./terraform

      - name: Terraform Apply
        id: apply
#        if: github.event_name == 'pull_request'
        run: terraform apply -auto-approve
        continue-on-error: true
        working-directory: ./terraform

      - name: Set var from TF Output
        id: setVar
        run: |
          bucket_name=$(terraform output bucket_name)
          echo "bucket_name=$bucket_name" >> $GITHUB_ENV
        working-directory: ./terraform

      - run: echo "${{ env.bucket_name }}"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'


      - run: yarn install --frozen-lockfile
      - run: yarn run build --if-present
#      - run: ls
#      - run: ls ./build
#     - run: npm test


      - name: Deploy static site to S3 bucket
        env:
          aws_bucket_name: ${{ secrets.AWS_BUCKET_NAME }}
        run: aws s3 sync ./build/ s3://"$aws_bucket_name" --delete
