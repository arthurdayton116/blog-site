{"version":3,"sources":["cache.js","assets/ObservatoryPark.jpg","components/NavigationBar.js","assets/will.jpeg","components/About.js","blogs/data.js","components/Approval.js","components/NoMatch.js","components/Blog.js","blogs/BlogMDX.js","blogs/2/NetworkCIDR.png","blogs/2/NetworkPlan_19.png","blogs/2/AWS_VPC.png","blogs/2/terraform_init.png","blogs/2/vpc_folder.png","blogs/2/vpc_folder2.png","blogs/2/vpc_aws_console.png","blogs/2/vpc_aws_subnet_private.png","blogs/2/vpc_aws_subnet_public.png","blogs/2/vpc_aws_igw.png","blogs/2/vpc_aws_route_table_igw.png","blogs/2/vpc_aws_route_table_main.png","blogs/2/images.js","blogs/3/MC_Arch.png","blogs/3/EC2_Components.png","blogs/3/roleWithPolicy.png","blogs/3/policyWithRole.png","blogs/3/trustRelationship.png","blogs/3/ec2webserver.png","blogs/3/tf_folder.png","blogs/3/ServiceFile.png","blogs/3/vpc_outputs.png","blogs/3/s3_outputs.png","blogs/3/publicLogin.png","blogs/3/private_fail.png","blogs/3/publicloginkeycopy.png","blogs/3/Browser_Apache.png","blogs/3/s3WithFiles.png","blogs/3/s3_with_proof.png","blogs/3/images.js","blogs/images.js","components/CodeBlock.js","components/Comments.js","components/Post.js","components/Theme.js","App.js","index.js"],"names":["accessTokenVar","makeVar","userVar","NavigationBar","useOktaAuth","authState","oktaAuth","login","a","signInWithRedirect","logout","signOut","useState","setUserInfo","useEffect","isAuthenticated","getUser","then","info","console","log","user","catch","err","error","theme","useTheme","displayVar","toggleDisplayVar","LogOnOffButton","props","logOnButton","id","variant","onClick","display","sx","linkSX","logOffButton","Fragment","href","pb","bg","navbar","background","alignItems","src","logo","width","imageWidth","height","imageHeight","borderRadius","mx","pr","fontSize","hover","flexWrap","textAlign","p","linkSXAlt2","About","textSx","h4Sx","color","colors","primaryBackground","fontFamily","ml","h1Sx","pt","Helmet","property","content","marginLeft","marginRight","verticalAlign","avatar","margin","bgColor","url","postData","postID","data","filter","obj","parseInt","GET_UNAPPROVED_COMMENTS","gql","APPROVE_COMMENTS","Approval","useQuery","fetchPolicy","loading","useMutation","refetchQueries","approveComment","_data","loadingMutation","_error","unapprovedComments","map","CommentsTableHashKey","postid","name","comment","timestamp","dtcnvrt","Date","dtfmt","toString","title","px","mb","border","defaultValue","disabled","onChange","e","variables","email","htmlFor","textArea","value","NoMatch","fontWeight","linkSXAlt1","cardArr","Blogs","post","sort","b","order","textColor","m","alignContent","justifyContent","borderWidth","borderStyle","borderColor","style","textDecoration","to","pathname","state","blog1","lazy","blog2","blog3","blog4","blog5","blog6","blog7","blogContent","NETWORKCIDR_IMAGE","NETWORKCIDR","NETWORKPLAN_19_IMAGE","NETWORKPLAN_19","AWS_VPC_IMAGE","AWS_VPC","TERRAFORM_INIT_IMAGE","TERRAFORM_INIT","VPC_FOLDER_IMAGE","VPC_FOLDER","VPC_FOLDER2_IMAGE","VPC_FOLDER2","VPC_CONSOLE_IMAGE","VPC_CONSOLE","SUBNET_PRIVATE_IMAGE","SUBNET_PRIVATE","SUBNET_PUBLIC_IMAGE","SUBNET_PUBLIC","IGW_IMAGE","IGW","ROUTE_TABLE_PUBLIC_IMAGE","ROUTE_TABLE_PUBLIC","ROUTE_TABLE_MAIN_IMAGE","ROUTE_TABLE_MAIN","ARCH_DRAWING_IMAGE","ARCH_DRAWING","ARCH_EC2_DRAWING_IMAGE","ARCH_EC2_DRAWING","ROLE_POLICY_IMAGE","ROLE_POLICY","POLICY_ROLE_IMAGE","POLICY_ROLE","TRUST_RELATIONSHIP_IMAGE","TRUST_RELATIONSHIP","WEBSERVER_IMAGE","WEBSERVER","TF_FOLDER_IMAGE","TF_FOLDER","SERVICEFILE_IMAGE","SERVICEFILE","VPC_OUTPUTS_IMAGE","VPC_OUTPUTS","S3_OUTPUTS_IMAGE","S3_OUTPUTS","PUBLIC_LOGIN_IMAGE","PUBLIC_LOGIN","PRIVATE_FAIL_IMAGE","PRIVATE_FAIL","PUBLIC_KEYCOPY_IMAGE","PUBLIC_KEYCOPY","BROWSER_PROOF_IMAGE","BROWSER_PROOF","S3_BEFORE_IMAGE","S3_BEFORE","S3_AFTER_IMAGE","S3_AFTER","blogImageContent","blog2Images","blog3Images","CustomCodeBlock","className","copy","children","language","split","highlight","replace","text","dracula","wrapLines","codeBlock","GET_COMMENTS","Comments","showForm","setshowForm","showComments","setshowComments","message","comments","as","mt","RBForm","hide","addCommentMutation","addComment","currentDateTime","toLocaleString","onSubmit","preventDefault","timeStamp","target","py","placeholder","buttons","size","speedMultiplier","Post","postParam","useParams","mlArr","plArr","codeBlockSx","pl","components","pre","code","h1","h4","h5","ul","listStyleType","paddingLeft","ol","Content","Images","blogImages","TechText","returnVal","arr","tech","index","length","pale","h5Sx","technologies","posted","lastUpdated","fallback","images","primarybackground","primarytext","primarytexthover","primaryFontFamily","pw","theme_config","breakpoints","detail","fontSizes","primary","commentBG","ph","padding","menuIcon","variants","OKTA_DOMAIN","process","CALLBACK_PATH","ISSUER","HOST","window","location","host","REDIRECT_URI","gurl","CYPRESS_CI_LOCAL_HOST","REACT_APP_GRAPHQL_ENDPOINT","redirect_ep","GRAPHQL_ENDPOINT","DOCKER_GRAPHQL_ENDPOINT","gql_ep","httpLink","createHttpLink","uri","config","issuer","clientId","redirectUri","scopes","pkce","OktaAuth","App","accessTokenContainer","useReactiveVar","authLink","setContext","_","headers","authorization","accessToken","client","ApolloClient","link","concat","cache","InMemoryCache","history","useHistory","restoreOriginalUri","_oktaAuth","originalUri","toRelativeUrl","origin","ApolloProvider","exact","path","component","LoginCallback","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.59b35fd3.chunk.js","sourcesContent":["import { makeVar } from '@apollo/client';\n\n// set auth token to empty\nexport const accessTokenVar = makeVar({});\n\nexport const userVar = makeVar({});\n","export default __webpack_public_path__ + \"static/media/ObservatoryPark.ba50a4b1.jpg\";","import React, {useState, useEffect} from 'react';\nimport {useOktaAuth} from \"@okta/okta-react\";\nimport { Image, Flex, Box, Link } from 'rebass';\nimport logo from '../assets/ObservatoryPark.jpg';\nimport {useTheme} from \"@emotion/react\";\nimport {FaBars} from 'react-icons/fa';\nimport { accessTokenVar, userVar } from '../cache';\n\nexport const NavigationBar = () => {\n// TODO - add user profile\n    const { authState, oktaAuth } = useOktaAuth();\n\n    const login = async () => { await oktaAuth.signInWithRedirect(); }\n    const logout = async () => { await oktaAuth.signOut(); }\n\n    // eslint-disable-next-line no-unused-vars\n    // noinspection JSUnusedLocalSymbols\n    // eslint-disable-next-line\n    const [userInfo, setUserInfo] = useState(null);\n\n    useEffect(() => {\n        if (!authState || !authState.isAuthenticated) {\n            // When user isn't authenticated, forget any user info\n            console.log(\"null auth\")\n            setUserInfo(null);\n            accessTokenVar({})\n            userVar({})\n        } else {\n            oktaAuth.getUser().then((info) => {\n                console.log(\"non null auth\")\n                accessTokenVar({authState: authState});\n                userVar({user: info})\n                setUserInfo(info);\n                console.log(\"info\", info)\n            }).catch((err) => {\n                console.error(\"err\",err);\n            });\n        }\n    }, [authState, oktaAuth]); // Update if authState changes\n\n    const theme = useTheme()\n    const [displayVar, toggleDisplayVar] = useState('none')\n\n    const LogOnOffButton = (props) => {\n        const logOnButton =<Link id=\"logOnButton\" variant='nav' onClick={()=>login()} display={['none','block','block']} sx={theme.linkSX} >LogIn</Link>\n        const logOffButton =(<React.Fragment>\n            <Link id=\"approvalButton\" variant='nav' href='/approval' display={['none','block','block']} sx={theme.linkSX} >Approval</Link>\n            <Link id=\"logOffButton\" variant='nav' onClick={()=>logout()} display={['none','block','block']} sx={theme.linkSX} >LogOff</Link>\n            </React.Fragment>)\n\n\n        if (!props.authState) {\n            return logOnButton\n        }\n        if (!props.authState.isAuthenticated) {\n            return logOnButton\n        }\n        return logOffButton\n\n    }\n\n    return (\n        <Box pb={[2,2,4]} >\n        <Flex\n            bg={theme.navbar.background}\n            alignItems='center'>\n            <Image\n                src={logo}\n                display={['none','block','block']}\n                sx={{\n                    width: theme.navbar.imageWidth,\n                    height: theme.navbar.imageHeight,\n                    borderRadius: 0,\n                }}\n            />\n                <Link variant='nav' href='/blog' display={['none','block','block']} sx={theme.linkSX} >Blog</Link>\n                <Link variant='nav' href='/about' display={['none','block','block']} sx={theme.linkSX} >About</Link>\n            <LogOnOffButton authState={authState}/>\n            <Box mx='auto' />\n            <Box\n                pr={4} sx={theme.linkSX}\n                display={['block','none','none']}\n                fontSize={[3,4,4]}\n                onClick={() => {\n                    if(displayVar==='none') return toggleDisplayVar('block'); else return toggleDisplayVar('none');\n                }\n                }\n            ><FaBars /></Box>\n        </Flex>\n            <Box bg={theme.navbar.hover} display={displayVar}>\n                <Flex flexWrap='wrap' textAlign='right'>\n                    <Box width={'100%'} p={2}>\n                        <Link variant='nav' href='/blog'  sx={theme.linkSXAlt2} onClick={() =>toggleDisplayVar('none')}>Blog</Link>\n                    </Box>\n                    <Box width={'100%'} p={2}>\n                        <Link variant='nav' href='/about'  sx={theme.linkSXAlt2} onClick={() =>toggleDisplayVar('none')}>About</Link>\n                    </Box>\n                </Flex>\n            </Box>\n        </Box>\n)}\n","export default __webpack_public_path__ + \"static/media/will.410b0745.jpeg\";","import React from 'react';\nimport { useTheme } from '@emotion/react';\nimport avatar from '../assets/will.jpeg';\nimport { SocialIcon } from 'react-social-icons';\n\nimport {\n    Box,\n    Image,\n    Heading,\n    Text,\n    Flex\n} from 'rebass';\n\nimport {Helmet} from \"react-helmet\";\n\n export const About = () => {\n     const theme = useTheme()\n     const textSx={\n         pb: [3,3,2]\n     }\n     const h4Sx={\n         color: theme.colors.primaryBackground,\n         fontFamily: theme.fontFamily,\n         pb: [3,3,2],\n         ml: [0,0,2]\n     }\n     const h1Sx={\n         ...theme.h1Sx,\n         fontSize: [5,6,7],\n         pb: 2,\n         pt: 2,\n     }\n\n     return (\n         <Box>\n             <Helmet>\n                 <meta property=\"og:type\" content=\"profile\"/>\n                 <meta property=\"og:title\" content=\"About\"/>\n                 <meta property=\"og:url\" content=\"https://arthurdayton.com/about\"/>\n                 <meta property=\"og:image\" content=\"%PUBLIC_URL%/will.jpg\"/>\n                 <meta property=\"og:description\" content=\"About Arthur Dayton\"/>\n                 <meta property=\"article:author\" content=\"Arthur Dayton\"/>\n                 <meta property=\"article:published_date\" content=\"2022-02-16\"/>\n                 <meta property=\"article:tag\" content=\"About\"/>\n                 <meta property=\"article:tag\" content=\"Profile\"/>\n             </Helmet>\n         <Flex flexWrap='wrap' p={[0,1,2]}>\n             <Box sx={{width: ['1', '1/2', '1/2'],\n                 display: ['flex','',''],\n                 marginLeft: ['auto','auto','5%'],\n                 marginRight:['auto','auto','5%']\n             }}\n             >\n                 <Image p={[0,1,2]}\n                        verticalAlign='middle'\n                        src={avatar}\n                        sx={{ width: ['150px','300px'], height: ['150px','300px'] ,borderRadius: 9999}}\n                 />\n             </Box>\n             <Box\n                 sx={{\n                     textAlign: ['center','center','left'],\n                     width: [ '1', '1/2' , '1/2'],\n                     color: theme.colors.primaryBackground,\n                     fontSize: 20,      // theme.fontSizes[2]\n                     margin: 3,        // theme.space[3]\n                 }}>\n                 <Heading\n                     sx={h1Sx}>\n                     Arthur Dayton\n                 </Heading>\n                 <Box  sx={h4Sx}>\n                     <Text sx={textSx}>Husband, Dad</Text>\n                     <Text sx={textSx}>Skier, Hiker, Builder</Text>\n                     <Text sx={textSx}>Software Engineer, Architect, Cloud Enthusiast (All of them!)</Text>\n                     <Text sx={textSx}>Love Terraform, Go, Docker, K8s, JavaScript, React and GraphQL</Text>\n                     <Text sx={textSx}>Relational Database Apologist, Kimball Believer</Text>\n                 </Box>\n             </Box>\n\n         </Flex>\n     <SocialIcon bgColor={theme.colors.primaryBackground} url=\"https://www.linkedin.com/in/arthurdayton/\" />\n         </Box>\n     )}\n\n","import data from '../blogs/data.json';\n\nexport const postData = (postID) => {\n    return data.filter((obj) => {\n        // eslint-disable-next-line\n        return obj.id === parseInt(postID)\n    })[0]\n}\n\n","import React from 'react';\nimport { useTheme } from '@emotion/react';\nimport { Box, Flex } from 'rebass';\n// eslint-disable-next-line\nimport { gql, useQuery, useMutation } from '@apollo/client';\n\nimport { Input, Label, Textarea, Checkbox } from '@rebass/forms';\n\nimport { userVar } from '../cache';\nimport { postData } from '../blogs/data';\n\nconst GET_UNAPPROVED_COMMENTS = gql`\n  query {\n    unapprovedComments {\n      postid\n      timestamp\n      comment\n      name\n      CommentsTableHashKey\n      okToShow\n    }\n  }\n`;\n\nconst APPROVE_COMMENTS = gql`\n    mutation ApproveComment($comment: NewApproval!) {\n        approveComment(comment: $comment) {\n            postid\n            timestamp\n            comment\n            name\n            CommentsTableHashKey\n            okToShow\n            approverName\n            approvalTimestamp\n        }\n    }\n`;\n\nexport const Approval = (props) => {\n  const { loading, error, data } = useQuery(GET_UNAPPROVED_COMMENTS, {\n    fetchPolicy: 'network-only',\n  });\n\n    // eslint-disable-next-line no-unused-vars\n    const [approveComment, { _data, loadingMutation, _error }] = useMutation(APPROVE_COMMENTS,{\n        refetchQueries: [GET_UNAPPROVED_COMMENTS]});\n\n    const user = userVar()\n\n    console.log(user)\n  const theme = useTheme();\n  console.log('props', props);\n\n  if (error) {\n    return (\n      <div id=\"approvalError\">Error - Please contact your administrator</div>\n    );\n    // <div>Error: {error.message}</div>;\n  } else if (loading) {\n    return <div id=\"approvalLoading\">Loading...</div>;\n  } else {\n    console.log(data.unapprovedComments);\n    return (\n      <div id=\"approvalData\">\n        <Box>\n          <Box>\n            {data.unapprovedComments.map(\n              ({ CommentsTableHashKey, postid, name, comment, timestamp }) => {\n                const dtcnvrt = new Date(timestamp);\n                const dtfmt = dtcnvrt.toString(dtcnvrt);\n                const { title } = postData(postid) || {title: \"\" };\n\n                return (\n                  <Box key={CommentsTableHashKey}>\n                    {/*<Box sx={theme.linkSXAlt1}>*/}\n                    <Box width={1 / 3} px={0}>\n                      <hr />\n                    </Box>\n                    <Box>\n                      <Flex mx={-2} mb={3}>\n                        <Box width={1 / 3} px={0}>\n                          {/*<Label htmlFor='date'>Date</Label>*/}\n                          <Input\n                            sx={{\n                              border: 'none',\n                            }}\n                            id={'date-' + CommentsTableHashKey}\n                            name=\"date\"\n                            defaultValue={dtfmt}\n                            disabled\n                          />\n                        </Box>\n                      </Flex>\n                      <Flex mx={-2} mb={3}>\n                        <Box>\n                          <Label>\n                            <Checkbox id=\"approve\" name=\"approve\"\n                            onChange={\n                                async (e) => {\n                                    console.log('approve')\n                                    console.log('user',user)\n                                    return await approveComment(\n                                        {variables:{\n                                                \"comment\": {\n                                                    \"CommentsTableHashKey\": CommentsTableHashKey,\n                                                    \"approverName\": user.user.email,\n                                                    \"okToShow\": \"true\"\n                                                }\n                                            }\n                                        })\n                                }\n\n                            }\n                            />\n                            Approve\n                          </Label>\n                        </Box>\n                      </Flex>\n                      <Flex mx={-2} mb={3}>\n                        <Box width={1 / 3} px={2}>\n                          <Label htmlFor=\"name\">Post</Label>\n                          <Input\n                            id={'postID-' + CommentsTableHashKey}\n                            name=\"postID\"\n                            defaultValue={`${postid} - ${title}`}\n                            disabled\n                          />\n                        </Box>\n                      </Flex>\n                      <Flex mx={-2} mb={3}>\n                        <Box width={1 / 3} px={2}>\n                          <Label htmlFor=\"name\">Name</Label>\n                          <Input\n                            id={'name-' + CommentsTableHashKey}\n                            name=\"name\"\n                            defaultValue={name}\n                            disabled\n                          />\n                        </Box>\n                      </Flex>\n                      <Flex mx={-2} mb={3}>\n                        <Box width={1 / 3} px={2}>\n                          <Label htmlFor=\"comment\">Comment</Label>\n                          <Textarea\n                            sx={theme.textArea}\n                            id={'comment-' + CommentsTableHashKey}\n                            name=\"comment\"\n                            value={comment}\n                            disabled\n                          />\n                        </Box>\n                      </Flex>\n                    </Box>\n                  </Box>\n                );\n              },\n            )}\n          </Box>\n        </Box>\n      </div>\n    );\n  }\n};\n\nexport default Approval;\n","import React from 'react';\nimport { FcBrokenLink } from 'react-icons/fc';\nimport { Box, Flex } from \"rebass\";\nimport {useTheme} from \"@emotion/react\";\n\nconst NoMatch = () => {\n    const theme = useTheme()\n    return (\n    <Flex flexWrap='wrap' p={1}>\n        <Box sx={{width: '100%',\n            textAlign: ['center','center','center'],\n            marginLeft: ['auto','auto','auto'],\n            marginRight:['auto','auto','auto'],\n            fontSize: [100,200,300],\n        }}\n        >\n            <FcBrokenLink/>\n        </Box>\n        <Box\n            sx={{\n                textAlign: ['center','center','center'],\n                marginLeft: ['auto','auto','auto'],\n                marginRight:['auto','auto','auto'],\n                width: '100%',\n                fontWeight: 900,\n                color: theme.linkSXAlt1.color\n            }}>\n                I ... I got nothing\n        </Box>\n\n    </Flex>\n)}\n\nexport default NoMatch;\n","import { React } from 'react'\nimport { NavLink } from \"react-router-dom\";\nimport {Flex, Box, Card, Heading} from 'rebass';\nimport data from '../blogs/data.json';\nimport {useTheme} from \"@emotion/react\";\nimport {Helmet} from \"react-helmet\";\n\n\nconst maxPostNumber = 6\nconst cardArr = [ 1, 1/2, 1/4 ]\n// const plArr = [0,2,3]\n\n\n\n\n\nexport const Blogs = (props) => {\n    const theme = useTheme()\n\n        return (\n            <div>\n                <Helmet>\n                    <meta property=\"og:title\" content=\"Arthur Dayton Blog\" />\n                    <meta property=\"og:description\" content=\"Arthur uses this site to blog about and demonstrate technology concepts.  It is currently deployed using serverless technologies on AWS.\" />\n                    <meta property=\"og:image\" content=\"%PUBLIC_URL%/ObservatoryPark.jpg\" />\n                    <meta property=\"article:author\" content=\"Arthur Dayton\"/>\n                    <meta property=\"article:published_time\" content=\"2022-02-16\"/>\n                </Helmet>\n                <Flex id=\"posts\" flexWrap={'wrap'} alignItems='center' sx={theme.linkSXAlt1}>\n                    {data.filter(post =>  post.id <= maxPostNumber).sort(function (a, b) {\n                        return a.order - b.order;\n                    }).map(post => {\n                        const textColor = post.order === 1 ? 'white' : 'black';\n                        const bgColor = post.order === 1 ? 'black' : 'white';\n                        return (\n                    <Box width={cardArr} height={'130px'}  m={2} bg={bgColor} id={`post_${post.id}`} key={post.id}\n                         sx={{borderRadius: 20, alignContent: 'center', justifyContent: 'center',\n                             borderWidth: '2px',\n                             borderStyle: 'solid',\n                             borderColor: 'black',\n                             }} p={2} >\n                            <NavLink style={{ textDecoration: 'none' }} to={\n                                {\n                                    pathname: `/post/${post.id}/`,\n                                    state: {\n                                        post: post\n                                    },\n                                }\n                            }>\n                            <Card\n                                height={'115px'} alignItems='center' justifyContent='center'\n                                  sx={{'textAlign': 'center', 'verticalAlign': 'middle',\n                                      display: 'flex'}}>\n                                {/*<Image src={'images/templatev2/frenchy.png'} />*/}\n                                <Heading fontSize={[ 1, 2, 3 ]} fontFamily={theme.fontFamily}\n                                         color={textColor}\n                                >{post.title}</Heading>\n                            </Card>\n                            </NavLink>\n                    </Box>\n                    )}\n                    )}\n                </Flex>\n            </div>\n        )\n}\n","import {lazy} from \"react\";\nimport {importMDX} from \"mdx.macro\";\n\nconst blog1 = lazy(() => importMDX('../blogs/1/index.mdx'))\nconst blog2 = lazy(() => importMDX('../blogs/2/index.mdx'))\nconst blog3 = lazy(() => importMDX('../blogs/3/index.mdx'))\nconst blog4 = lazy(() => importMDX('../blogs/4/index.mdx'))\nconst blog5 = lazy(() => importMDX('../blogs/5/index.mdx'))\nconst blog6 = lazy(() => importMDX('../blogs/6/index.mdx'))\nconst blog7 = lazy(() => importMDX('../blogs/7/index.mdx'))\n\nconst blogContent = (id) => {\n    switch(id) {\n        case 1:\n            return blog1;\n        case 2:\n            return blog2;\n        case 3:\n            return blog3;\n        case 4:\n            return blog4;\n        case 5:\n            return blog5;\n        case 6:\n            return blog6;\n        case 7:\n            return blog7;\n        default:\n            return 'YOU FORGOT TO ADD BLOG TO Blog.MDX.js'\n    }\n};\n\nexport default blogContent;\n","export default __webpack_public_path__ + \"static/media/NetworkCIDR.e3fb9234.png\";","export default __webpack_public_path__ + \"static/media/NetworkPlan_19.26b333f4.png\";","export default __webpack_public_path__ + \"static/media/AWS_VPC.191a42c5.png\";","export default __webpack_public_path__ + \"static/media/terraform_init.9c925b3c.png\";","export default __webpack_public_path__ + \"static/media/vpc_folder.1b650319.png\";","export default __webpack_public_path__ + \"static/media/vpc_folder2.bfcd3e28.png\";","export default __webpack_public_path__ + \"static/media/vpc_aws_console.4730673b.png\";","export default __webpack_public_path__ + \"static/media/vpc_aws_subnet_private.afa19487.png\";","export default __webpack_public_path__ + \"static/media/vpc_aws_subnet_public.7d28de9a.png\";","export default __webpack_public_path__ + \"static/media/vpc_aws_igw.3c1bd002.png\";","export default __webpack_public_path__ + \"static/media/vpc_aws_route_table_igw.69990fd8.png\";","export default __webpack_public_path__ + \"static/media/vpc_aws_route_table_main.c8e9490f.png\";","import NETWORKCIDR from './NetworkCIDR.png'\nimport NETWORKPLAN_19 from './NetworkPlan_19.png'\nimport AWS_VPC from './AWS_VPC.png'\nimport TERRAFORM_INIT from './terraform_init.png'\nimport VPC_FOLDER from './vpc_folder.png'\nimport VPC_FOLDER2 from './vpc_folder2.png'\nimport VPC_CONSOLE from './vpc_aws_console.png'\nimport SUBNET_PRIVATE from './vpc_aws_subnet_private.png'\nimport SUBNET_PUBLIC from './vpc_aws_subnet_public.png'\nimport IGW from './vpc_aws_igw.png'\nimport ROUTE_TABLE_PUBLIC from './vpc_aws_route_table_igw.png'\nimport ROUTE_TABLE_MAIN from './vpc_aws_route_table_main.png'\n\nexport const NETWORKCIDR_IMAGE = NETWORKCIDR;\nexport const NETWORKPLAN_19_IMAGE = NETWORKPLAN_19;\nexport const AWS_VPC_IMAGE = AWS_VPC;\nexport const TERRAFORM_INIT_IMAGE  = TERRAFORM_INIT;\nexport const VPC_FOLDER_IMAGE  = VPC_FOLDER;\nexport const VPC_FOLDER2_IMAGE  = VPC_FOLDER2;\nexport const VPC_CONSOLE_IMAGE  = VPC_CONSOLE;\nexport const SUBNET_PRIVATE_IMAGE  = SUBNET_PRIVATE;\nexport const SUBNET_PUBLIC_IMAGE  = SUBNET_PUBLIC;\nexport const IGW_IMAGE  = IGW;\nexport const ROUTE_TABLE_PUBLIC_IMAGE  = ROUTE_TABLE_PUBLIC;\nexport const ROUTE_TABLE_MAIN_IMAGE  = ROUTE_TABLE_MAIN;\n\n","export default __webpack_public_path__ + \"static/media/MC_Arch.9dad859d.png\";","export default __webpack_public_path__ + \"static/media/EC2_Components.873dd752.png\";","export default __webpack_public_path__ + \"static/media/roleWithPolicy.734ffcbf.png\";","export default __webpack_public_path__ + \"static/media/policyWithRole.a716b5ee.png\";","export default __webpack_public_path__ + \"static/media/trustRelationship.e1019464.png\";","export default __webpack_public_path__ + \"static/media/ec2webserver.77768959.png\";","export default __webpack_public_path__ + \"static/media/tf_folder.8dcc53cb.png\";","export default __webpack_public_path__ + \"static/media/ServiceFile.725f61cb.png\";","export default __webpack_public_path__ + \"static/media/vpc_outputs.71dfe3d8.png\";","export default __webpack_public_path__ + \"static/media/s3_outputs.bdf269f4.png\";","export default __webpack_public_path__ + \"static/media/publicLogin.4cc8595b.png\";","export default __webpack_public_path__ + \"static/media/private_fail.96d8d6a7.png\";","export default __webpack_public_path__ + \"static/media/publicloginkeycopy.62384b3b.png\";","export default __webpack_public_path__ + \"static/media/Browser_Apache.41a0210d.png\";","export default __webpack_public_path__ + \"static/media/s3WithFiles.693f84a9.png\";","export default __webpack_public_path__ + \"static/media/s3_with_proof.016808eb.png\";","import ARCH_DRAWING from './MC_Arch.png'\nimport ARCH_EC2_DRAWING from './EC2_Components.png'\nimport ROLE_POLICY from './roleWithPolicy.png'\nimport POLICY_ROLE from './policyWithRole.png'\nimport TRUST_RELATIONSHIP from './trustRelationship.png'\nimport WEBSERVER from './ec2webserver.png'\nimport TF_FOLDER from './tf_folder.png'\nimport SERVICEFILE from './ServiceFile.png'\nimport VPC_OUTPUTS from './vpc_outputs.png'\nimport S3_OUTPUTS from './s3_outputs.png'\nimport PUBLIC_LOGIN from './publicLogin.png'\nimport PRIVATE_FAIL from './private_fail.png'\nimport PUBLIC_KEYCOPY from './publicloginkeycopy.png'\nimport BROWSER_PROOF from './Browser_Apache.png'\nimport S3_BEFORE from './s3WithFiles.png'\nimport S3_AFTER from './s3_with_proof.png'\n\nexport const ARCH_DRAWING_IMAGE = ARCH_DRAWING;\nexport const ARCH_EC2_DRAWING_IMAGE = ARCH_EC2_DRAWING;\nexport const ROLE_POLICY_IMAGE = ROLE_POLICY;\nexport const POLICY_ROLE_IMAGE = POLICY_ROLE;\nexport const TRUST_RELATIONSHIP_IMAGE = TRUST_RELATIONSHIP;\nexport const WEBSERVER_IMAGE = WEBSERVER;\nexport const TF_FOLDER_IMAGE = TF_FOLDER;\nexport const SERVICEFILE_IMAGE = SERVICEFILE;\nexport const VPC_OUTPUTS_IMAGE = VPC_OUTPUTS;\nexport const S3_OUTPUTS_IMAGE = S3_OUTPUTS;\nexport const PUBLIC_LOGIN_IMAGE = PUBLIC_LOGIN;\nexport const PRIVATE_FAIL_IMAGE = PRIVATE_FAIL;\nexport const PUBLIC_KEYCOPY_IMAGE = PUBLIC_KEYCOPY;\nexport const BROWSER_PROOF_IMAGE = BROWSER_PROOF;\nexport const S3_BEFORE_IMAGE = S3_BEFORE;\nexport const S3_AFTER_IMAGE = S3_AFTER;\n\n","import * as blog2Images from './2/images'\nimport * as blog3Images from './3/images'\n\nconst blogImageContent = (id) => {\n    switch(id) {\n        case 1:\n            return '';\n        case 2:\n            return blog2Images;\n        case 3:\n            return blog3Images;\n        default:\n            return 'problem in blogs/images.js file '\n    }\n};\n\nexport default blogImageContent;\n","import React from \"react\";\nimport { CodeBlock, CopyBlock, dracula } from \"react-code-blocks\";\n\nconst CustomCodeBlock = (props) => {\n    // if any language selected or javascript by default\n\n    const { className, copy, children } = props;\n\n    const language =\n        className?.split(\"-\")[0] === \"language\"\n            ? className.split(\"-\")[1]\n            : \"javascript\";\n\n    const highlight =\n        className?.split(\"-\")[2] === \"highlight\"\n            ? className.split(\"-\")[3].replace('_','-')\n            : \"\";\n\n    return copy ? (\n        <CopyBlock\n            text={children}\n            language={language}\n            theme={dracula}\n            wrapLines\n            codeBlock\n        />\n    ) : (\n        <CodeBlock highlight={highlight} text={children} language={language} theme={dracula} wrapLines />\n    );\n};\n\n\nexport default CustomCodeBlock;\n","import React, {useState} from 'react'\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport {Box, Heading, Flex, Button } from 'rebass';\nimport { Label, Input, Textarea } from '@rebass/forms'\nimport {FaAngleDown, FaAngleUp, FaMinus, FaPlus} from \"react-icons/fa\";\n\nimport {useTheme} from \"@emotion/react\";\nimport {gql, useQuery, useMutation} from \"@apollo/client\";\n// const maxPostNumber = 5\n\n\nconst GET_COMMENTS = gql`\n    query GET_COMMENTS($postid: String!){\n        comments(postid: $postid) {\n            postid\n            timestamp\n            comment\n            name\n            CommentsTableHashKey\n        }\n    }\n`;\n\n\nconst Comments = (props) => {\n    // eslint-disable-next-line\n    // const [error, setError] = useState(null);\n    const [showForm, setshowForm] = useState(false);\n    const [showComments, setshowComments] = useState(false);\n    // const [items, setItems] = useState([]);\n    const postid = props.postID || ''\n\n    const { loading, error, data } = useQuery(GET_COMMENTS, { variables:{postid: `${postid}`} });\n\n\n\n    // const { CommentsTableHashKey, postid, name, comment, timestamp } = data.comment;\n\n    const theme = useTheme()\n    console.log(\"props\",props)\n    // const commentList = getComments(props.postID)\n\n    if (error) {\n        return <div>Error: {error.message}</div>;\n    } else if (loading) {\n        return <div>Loading...</div>;\n    } else {\n        console.log(data.comments)\n        return (\n            <div>\n\n                <Heading as={'h1'} mt={2} mb={2} sx={theme.h1Sx}>Comments\n                    {!showComments && <FaAngleDown onClick={() => setshowComments(true)} />}\n                    {showComments && <FaAngleUp onClick={() => setshowComments(false)} />}\n                </Heading>\n\n                {showComments &&\n                <Box>\n                <Box mt={2} mb={2} sx={theme.h1Sx}>\n                    {!showForm && <FaPlus onClick={() => setshowForm(true)} />}\n                    {showForm && <FaMinus onClick={() => setshowForm(false)} />}\n                </Box>\n                    {showForm &&\n                    <RBForm postID={postid} hide={()=>setshowForm(false)}/>}\n\n                <Box>\n                    {data.comments.map(({CommentsTableHashKey, postid, name, comment, timestamp}) => {\n                        const dtcnvrt = new Date(timestamp)\n                        const dtfmt = dtcnvrt.toString(dtcnvrt)\n                        return (\n                        <Box key={postid}>\n                            {/*<Box sx={theme.linkSXAlt1}>*/}\n                            <Box width={1 / 3} px={0}>\n                                <hr/>\n                            </Box>\n                            <Box>\n                                <Flex mx={-2} mb={3}>\n                                    <Box width={1 / 3} px={0}>\n                                        {/*<Label htmlFor='date'>Date</Label>*/}\n                                        <Input\n                                            sx={{\n                                                border: 'none'\n                                            }}\n                                            id={'date-' + CommentsTableHashKey}\n                                            name='date'\n                                            defaultValue={dtfmt}\n                                            disabled\n                                        />\n                                    </Box>\n                                </Flex>\n                                <Flex mx={-2} mb={3}>\n                                    <Box width={1 / 3} px={2}>\n                                        <Label htmlFor='name'>Name</Label>\n                                        <Input\n                                            id={'name-' + CommentsTableHashKey}\n                                            name='name'\n                                            defaultValue={name}\n                                            disabled\n                                        />\n                                    </Box>\n                                </Flex>\n                                <Flex mx={-2} mb={3}>\n                                    <Box width={1 / 3} px={2}>\n                                        <Label htmlFor='comment'>Comment</Label>\n                                        <Textarea sx={theme.textArea}\n                                                  id={'comment-' + CommentsTableHashKey}\n                                                  name='comment'\n                                                  value={comment}\n                                                  disabled\n                                        />\n                                    </Box>\n                                </Flex>\n                            </Box>\n                        </Box>\n                    )\n                    }\n                    )}\n                </Box>\n                </Box>\n                }\n            </div>\n        )\n    }\n}\n\nexport default Comments;\n\nconst addCommentMutation = gql`\n    mutation Mutation($comment: NewComment!) {\n    addComment(comment: $comment) {\n        postid\n        timestamp\n        comment\n        name\n        CommentsTableHashKey  }}\n`\n\n\n\nfunction RBForm (props){\n    console.log(\"RBForm props = \", props.postID)\n    // const [commentIsPosting, setCommentIsPosting] = useState(false);\n\n    // eslint-disable-next-line no-unused-vars\n    const [addComment, { _data, loading, _error }] = useMutation(addCommentMutation,{\n        refetchQueries: [GET_COMMENTS]});\n\n    const currentDateTime = Date().toLocaleString();\n    const theme = useTheme()\n    return (\n        <Box p={2} fontFamily='arial'>\n        <Box\n             as='form'\n            onSubmit={async e => {\n                e.preventDefault();\n                const timeStamp = e.target[0].value\n                const name = e.target[1].value\n                const comment = e.target[2].value\n                const postid = props.postID\n                // const obj = {name, timeStamp, comment, postid}\n                console.log(timeStamp)\n                console.log(name)\n                console.log(comment)\n                console.log(e.target[3].value)\n\n                await addComment(\n                {variables:{\n                    \"comment\": {\n                        \"postid\": `${postid}`,\n                            \"timestamp\": timeStamp,\n                            \"comment\": comment,\n                            \"name\": name\n                    }\n                }\n                })\n                props.hide()\n\n            }}\n\n            py={3}>\n            <Flex mx={-2} mb={3}>\n            <Box width={1/3} px={0}>\n                {/*<Label htmlFor='date'>Date</Label>*/}\n                <Input\n                    sx={{\n                        border: 'none'\n                    }}\n                    id='date'\n                    name='date'\n                    defaultValue={currentDateTime}\n                    disabled\n                />\n            </Box>\n            </Flex>\n            <Flex mx={-2} mb={3}>\n                <Box width={1/3} px={2}>\n                    <Label htmlFor='name'>Name</Label>\n                    <Input\n                        id='name'\n                        name='name'\n                        placeholder='Jane Doe'\n                    />\n                </Box>\n            </Flex>\n            <Flex mx={-2} mb={3}>\n            <Box width={1/3} px={2}>\n                <Label htmlFor='comment'>Comment</Label>\n                <Textarea fontFamily='arial'\n                    id='comment'\n                    name='comment'\n                />\n            </Box>\n            </Flex>\n            <Flex mx={-2} mb={3}>\n                <Box width={1/3} px={2}>\n                    <Flex>\n                        <Button sx={theme.buttons}>\n                            Comment\n                        </Button>\n                        <Box px={2}>\n                            <ClipLoader  size={25} color={\"#123abc\"} loading={loading} speedMultiplier={1.5} />\n                        </Box>\n\n                    </Flex>\n                </Box>\n\n            </Flex>\n        </Box>\n        </Box>\n    )\n}\n","import React, {Suspense} from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { Box, Heading, Text } from 'rebass';\nimport blogContent from '../blogs/BlogMDX';\nimport blogImages from '../blogs/images';\nimport CustomCodeBlock from \"../components/CodeBlock\";\nimport {useTheme} from \"@emotion/react\";\nimport {postData}  from '../blogs/data';\nimport NoMatch from '../components/NoMatch'\nimport Comments from '../components/Comments'\n\n\nexport const blogIssue = \"https://github.com/arthurdayton116/arthurdayton116.github.io/issues/new\"\nexport const awsTFIssue = \"https://github.com/arthurdayton116/aws-terraform/issues/new\"\n\n// Post component - renders individual blog posts\nexport const Post = (props) => {\n\n    const { postid: postParam } = useParams();\n\n    const theme = useTheme()\n    // dynamic size arrays for different form factors\n    const mlArr = [0,2,4]\n    const plArr = [0,2,3]\n\n    // margins bases of form factor\n    const codeBlockSx={\n        pt: mlArr,\n        pb: mlArr,\n        pl: plArr,\n        fontSize: ['.75em','1.5em','1.5em'],\n    }\n\n    // react components in place of MDX tags\n    const components = {\n        pre: props => <div {...props} />,\n        code: props => <Box sx={codeBlockSx}><CustomCodeBlock {...props} /></Box>,\n        p: props => <Text ml={mlArr} mt={2} mb={2} {...props} />,\n        h1: props => <Box pl={plArr} pt={2} pb={2} {...props}><Heading {...props} as={'h1'}/></Box>,\n        h4: props => <Box pl={plArr} pt={2} pb={2} {...props}><Heading sx={theme.h4Sx} {...props} as={'h4'}/></Box>,\n        h5: props => <Box pl={plArr} pt={2} pb={2} {...props}><Heading {...props} as={'h5'}/></Box>,\n        ul: props => <ul { ...props} style={{listStyleType: 'square'}} >\n            <Box ml={mlArr}><span { ...props} style={{paddingLeft: '0em'}}></span></Box>\n        </ul>,\n        ol: props => <ol { ...props} >\n        </ol>\n    }\n\n    // get post data from state property\n    const post = postData(postParam)\n\n    console.log('post=', post)\n    // Blog content and images\n    const Content = post ? blogContent(post.id) : ''\n    const Images = post ? blogImages(post.id) : ''\n\n    // Tech referenced in post\n    const TechText = (props) => {\n        let returnVal = 'Tech: '\n        props.arr.map(\n            (tech,index) => {\n                console.log(props.arr.length)\n                // eslint-disable-next-line\n                returnVal += (props.arr.length-1 == index) ? tech : tech + ' - '\n                return ''\n            })\n        return (<Text>{returnVal}</Text>)\n    }\n\n    if (post)\n        return (\n    <Box id={`post_page_parent_${postParam}`}>\n        <Box p={mlArr} fontFamily='arial'>\n            <Box pl={mlArr} pt={mlArr} pb={mlArr} bg={theme.colors.pale}>\n                <Heading as={'h1'} sx={theme.h1Sx}>{post.title}</Heading>\n                <Heading pl={2} pt={2} as={'h5'} sx={theme.h5Sx}>\n                    <TechText arr={post.technologies}/>\n                </Heading>\n                <Heading pl={2} as={'h5'} sx={theme.h5Sx}>Posted: {post.posted}</Heading>\n                <Heading pl={2} pb={2} as={'h5'} sx={theme.h5Sx}>Last Updated: {post.lastUpdated}</Heading>\n            </Box>\n            <Box pt={2} pl={mlArr}>\n                <Suspense fallback={<div>Loading...</div>}>\n                    <Content components={components} post={post} images={Images} theme={theme}/>\n                </Suspense>\n                {/*<Box pt={2} pl={mlArr}>*/}\n                {/*Comments or questions create an issue on <Link href={blogIssue} target=\"_blank\">blog repo</Link> or <Link href={awsTFIssue} target=\"_blank\">code repo</Link>.*/}\n                {/*</Box>*/}\n                </Box>\n        </Box>\n        <Comments postID={post.id}/>\n    </Box>\n\n  )\n  else\n   return (<NoMatch/>)\n}\n","// https://coolors.co/993955-ae76a6-a3c3d9-ccd6eb-e9ecf5\n// const primarybackground = '#a3c3d9'\nconst primarybackground = 'black'\nconst primarydarkshade1 = '#305873'\nconst primarydarkshade2 = '#6EA2C4'\nconst primarytextdarkshade1 = '#566DB3'\nconst primarytext = '#e9ecf5'\nconst primarytexthover = '#ccd6eb'\nconst primaryFontFamily = 'Arial, sans-serif'\nconst commentBG = '#c7e8f3'\n\nconst pw = 27.2\nconst ph = 18.5\n\nconst theme_config =  {\n    breakpoints: ['599px','900px','1200px'],\n    detail: {\n        paddingLeft: '1em'\n    },\n    fontSizes: [\n        12, 14, 16, 24, 32, 48, 64\n    ],\n    fontFamily: primaryFontFamily,\n    colors: {\n        primary: '#007bff',\n        background: '#e9ecf5',\n        primaryBackground: primarybackground,\n        commentBG: commentBG,\n    },\n    navbar: {\n        background: primarybackground,\n        text: primarytext,\n        hover: primarytexthover,\n        imageHeight: [(ph*2),(ph*4),(ph*5)],\n        imageWidth: [(pw*2),(pw*4),(pw*5)],\n    },\n    linkSX: {\n        color: primarytext,\n        fontWeight: 'bold',\n        fontSize: '1.5em',\n        textDecoration: 'none',\n        padding: [1,3,3],\n        ':hover': {\n            color: primarytexthover,\n            fontWeight: 900,\n        }\n    },\n    linkSXAlt1: {\n        color: primarybackground,\n        fontWeight: 'bold',\n        fontSize: ['1em','1em','1.5em'],\n        textDecoration: 'none',\n        p: [1,2,3],\n        ':hover': {\n            color: primarytexthover,\n            fontWeight: 900,\n        }\n    },\n    linkSXAlt2: {\n        color: primarytextdarkshade1,\n        fontWeight: 'bold',\n        fontSize: '1em',\n        textDecoration: 'none',\n        padding: 3,\n        ':hover': {\n            color: primarytexthover,\n            fontWeight: 900,\n        }\n    },\n    menuIcon: {\n        size: ['20','30','40'],\n    },\n    h1: {\n        text: primarydarkshade2,\n    },\n    h1Sx: {\n        // color: primarydarkshade1,\n        color: primarybackground,\n        fontFamily: primaryFontFamily,\n    },\n    h5Sx: {\n        // color: primarydarkshade2,\n        color: primarybackground,\n        fontFamily: primaryFontFamily,\n        fontSize: '.75em',\n    },\n    h4: {\n        text: primarydarkshade1,\n    },\n    h4Sx: {\n        color: primarybackground,\n        fontFamily: primaryFontFamily,\n    },\n    text: {\n        primary: '#007bff',\n        background: '#e9ecf5',\n    },\n    textArea: {\n        fontFamily: primaryFontFamily,\n    },\n    buttons: {\n        background: primarybackground,\n        text: primarytext,\n        ':hover': {\n            color: \"black\",\n            background: \"white\",\n            borderRadius: 9,\n            border: \"2px solid black\",\n            fontWeight: 900,\n        }\n        // primary: {\n        //     color: 'blue',\n        //     bg: 'primary',\n        // },\n        // outline: {\n        //     color: 'primary',\n        //     bg: 'transparent',\n        //     boxShadow: 'inset 0 0 0 2px'\n        // },\n    },\n    variants : {\n        avatar: {\n            width: 48,\n            height: 48,\n            borderRadius: 9999,\n        }\n    }\n}\n\nexport default theme_config;\n","// okta\nimport {Security, SecureRoute, LoginCallback} from '@okta/okta-react';\nimport { OktaAuth, toRelativeUrl } from '@okta/okta-auth-js';\n\n// apollo client\nimport { setContext } from '@apollo/client/link/context';\nimport {\n    ApolloClient,\n    InMemoryCache,\n    ApolloProvider,\n    createHttpLink,\n    useReactiveVar,\n} from \"@apollo/client\";\n\n\n// React and Router\nimport React from 'react';\nimport {BrowserRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\n\nimport { Box } from \"rebass\";\nimport { ThemeProvider } from '@emotion/react';\n\n// React Helmet\nimport {Helmet} from \"react-helmet\";\n\n// Reactive Vars - https://www.apollographql.com/blog/apollo-client/caching/local-state-management-with-reactive-variables/\nimport { accessTokenVar } from './cache';\n\n// local components\nimport { NavigationBar } from './components/NavigationBar';\nimport { About } from './components/About';\nimport { Approval } from './components/Approval';\nimport NoMatch from './components/NoMatch';\nimport { Blogs } from './components/Blog';\nimport { Post } from './components/Post';\nimport theme from './components/Theme';\n\n// constants for configuring OKTA\nconst OKTA_ISSUER = process.env.REACT_APP_OKTA_ISSUER_SUFFIX;\nconst OKTA_DOMAIN = process.env.REACT_APP_OKTA_DOMAIN;\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nconst CALLBACK_PATH = process.env.REACT_APP_CALLBACK_PATH;\n\nconst ISSUER = `https://${OKTA_DOMAIN}${OKTA_ISSUER}`;\nconst HOST = window.location.host;\n\nconst SCOPES = 'openid profile email comment_approve';\n\n// construct graphql endpoint based on location\nconst gql_ep = () => {\n    let gurl = 'http://localhost:4000/graphql'\n\n    if (process.env.CYPRESS_CI_LOCAL_HOST) {\n        return gurl;\n    }\n\n    if (process.env.DOCKER_GRAPHQL_ENDPOINT) {\n        gurl = `http://${process.env.DOCKER_GRAPHQL_ENDPOINT.replace(/[\"]+/g, '')}`\n    }\n\n    if (process.env.REACT_APP_GRAPHQL_ENDPOINT) {\n        gurl = `https://${process.env.REACT_APP_GRAPHQL_ENDPOINT.replace(/[\"]+/g, '')}`\n    }\n\n    return gurl\n}\n\n// construct graphql endpoint based on location\nconst redirect_ep = () => {\n    let gurl = `http://${HOST}${CALLBACK_PATH}`\n\n    if (process.env.CYPRESS_CI_LOCAL_HOST) {\n        return gurl;\n    }\n\n    if (process.env.REACT_APP_GRAPHQL_ENDPOINT) {\n        gurl = `https://${HOST}${CALLBACK_PATH}`\n    }\n    return gurl\n}\n\nconst REDIRECT_URI = redirect_ep();\nconst GRAPHQL_ENDPOINT = gql_ep();\n\n// for use by apollo client constructor - https://www.apollographql.com/docs/react/api/link/introduction/\nconst httpLink = createHttpLink({\n    uri: GRAPHQL_ENDPOINT,\n});\n\nconsole.log('HOST - ', HOST)\nconsole.log('OKTA_DOMAIN - ', OKTA_DOMAIN)\nconsole.log('CALLBACK_PATH - ', CALLBACK_PATH)\nconsole.log('ISSUER - ', ISSUER)\nconsole.log('REDIRECT_URI - ', REDIRECT_URI)\n\n// okta config\nconst config = {\n    issuer: ISSUER,\n    clientId: CLIENT_ID,\n    redirectUri: REDIRECT_URI,\n    scopes: SCOPES.split(/\\s+/),\n    pkce: false\n};\n\n// create oktaAuth object for use by components\nconst oktaAuth = new OktaAuth(config);\n\nfunction App(props) {\n    // get the authentication token from reactive var if it exists\n    // console.log('token', accessTokenContainer.authState.accessToken.accessToken);\n    const accessTokenContainer = useReactiveVar(accessTokenVar)\n\n    const authLink = setContext((_, { headers }) => {\n        // return the headers to the context so httpLink can read them\n        return {\n            headers: {\n                ...headers,\n                authorization: accessTokenContainer.authState ? `Bearer ${accessTokenContainer.authState.accessToken.accessToken}` : \"\",\n            }\n        }\n    });\n\n    const client = new ApolloClient({\n        link: authLink.concat(httpLink),\n        // TODO - Use local cache example\n        cache: new InMemoryCache()\n    });\n\n    // used by OKTA Security component\n    const history = useHistory();\n    const restoreOriginalUri = async (_oktaAuth, originalUri) => {\n        history.replace(toRelativeUrl(originalUri || '/', window.location.origin));\n    };\n\n    return (\n        // Provides theme to child components\n        <Router>\n        <ThemeProvider theme={theme}>\n            <React.Fragment>\n                <Security oktaAuth={oktaAuth}\n                          restoreOriginalUri={restoreOriginalUri}\n                >\n                    { /* Apollo client for child components - put inside Security to give it access*/ }\n                    <ApolloProvider client={client}>\n                        <Helmet>\n                            <meta property=\"og:title\" content=\"Arthur Dayton Blog\" />\n                            <meta property=\"og:description\" content=\"Arthur uses this site to blog about and demonstrate technology concepts.  It is currently deployed using serverless technologies on AWS.\" />\n                            <meta property=\"og:image\" content=\"%PUBLIC_URL%/ObservatoryPark.jpg\" />\n                            <meta property=\"article:author\" content=\"Arthur Dayton\"/>\n                            <meta property=\"article:published_time\" content=\"2022-02-16\"/>\n                        </Helmet>\n                <Box style={{'position':'fixed', 'width': '100%'}}><NavigationBar  /></Box>\n                <Box sx={{height: theme.navbar.imageHeight}}/>\n                      { /* App routes go here */ }\n                      <Box pl={[2,2,4]}>\n                      <Switch>\n                          <Route exact path=\"/\" component={Blogs} />\n                          <Route path=\"/about\" component={About} />\n                          <Route path=\"/blog\" component={Blogs} />\n                          <Route path=\"/post/:postid\" exact={true} component={Post} />\n                          { /* callback component provided by OKTA */ }\n                          <Route path='/login/callback' component={LoginCallback}/>\n                          { /* Protected by OKTA */ }\n                          <SecureRoute path=\"/approval\" component={Approval} />\n                          <Route component={NoMatch} />\n                      </Switch>\n                      </Box>\n                    </ApolloProvider>\n                  </Security>\n\n          </React.Fragment>\n\n        </ThemeProvider>\n        </Router>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport { render,hydrate } from 'react-dom';\nimport './index.css'\nimport App from './App'\n\n// This is set up for postbuild react-snap that pre-renders for SEO\n// https://github.com/stereobooster/react-snap\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n    hydrate(<App />, rootElement);\n} else {\n    render(<App />, rootElement);\n}\n"],"sourceRoot":""}