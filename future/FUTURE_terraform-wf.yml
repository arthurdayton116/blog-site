#  call-terraform:
#    uses: arthurdayton116/blog-site/.github/workflows/FUTURE_terraform-wf.yml@main
#    with:
#      terraform_directory: ./terraform
#      environment: development
#    secrets:
#      TF_API_TOKEN: ${{ secrets.TF_API_TOKEN }}
#      TF_VAR_base_domain: ${{ secrets.BASE_DOMAIN }}
#      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      AWS_REGION: ${{ secrets.AWS_REGION }}

name: Terraform Reusable Workflow

on:
  workflow_call:
    inputs:
      # https://github.community/t/set-an-environment-variable-to-working-directory/146206/4
      terraform_directory:
        required: false
        default: notthis
        type: string
      environment:
        required: false
        default: development
        type: string
    secrets:
      TF_API_TOKEN:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_REGION:
        required: true
      TF_VAR_base_domain:
        required: true

jobs:
  terraform_job:
    name: Terraform Job
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.environment }}
      url: https://${{ inputs.environment }}
    env:
      TF_VAR_base_domain: ${{ secrets.TF_VAR_base_domain }}
    steps:
      - uses: actions/checkout@v2

      # Compare terraform directory to previous commit
      - name: Get terraform changed files
      id: changed-files-terraform
      uses: tj-actions/changed-files@v10.1
      with:
        path: lastCommit
        files: |
          terraform

      # Installs specified version of terraform - I like to pin versions - would make sense to use a variable at org level
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: false

      # Need these for terraform and S3 push
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Always run format / validate and output commands but run apply only if files have changed
      - run: ls -la

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ${{inputs.terraform_directory}}

      # Init using workspace from Terraform Cloud
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{inputs.terraform_directory}}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{inputs.terraform_directory}}

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        continue-on-error: false
        working-directory: ${{inputs.terraform_directory}}
